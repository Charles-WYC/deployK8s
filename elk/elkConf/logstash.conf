input {
    kafka {
    ## ref: https://www.elastic.co/guide/en/logstash/current/plugins-inputs-kafka.html
    bootstrap_servers => "10.1.0.11:9092,10.1.0.12:9092,10.1.0.13:9092"
    consumer_threads => 1
    client_id => "sink"
    group_id => "logstash-es"
    auto_offset_reset => "earliest"
    auto_commit_interval_ms => "500"
    enable_auto_commit => true
    topics => ["Order", "Response", "Trade", "computeResult", "monitorResult", "rb1000", "rb1001", "rb1002", "rb1003", "rb1004", "rb1005", "rb1006", "kTable"]
    decorate_events => "true"
    }
}

filter {
  ruby {
    code => "event.set('[@metadata][kafka][lc_topic]', event.get('[@metadata][kafka][topic]').split(/(?=[A-Z])/).map{|x| x.downcase }.join('_') )"
  }
  
  if [@metadata][kafka][topic] =~ "Order" or [@metadata][kafka][topic] =~ "Response" or [@metadata][kafka][topic] =~ "Trade" or [@metadata][kafka][topic] =~ "monitorResult" or [@metadata][kafka][topic] =~ "computeResult" or [@metadata][kafka][topic] =~ "kTable" {
    mutate {
      add_field => { "@message" => "%{message}" }
    }
    json{
      source => "@message"
    }
    mutate {
      remove_field => ["@message", "@version", "_type", "_score"]
    }
  }

  if [@metadata][kafka][topic] =~ "kTable" {
    mutate {
      convert => { "orderId" => "integer" }
      convert => { "exchangeOrderId" => "integer" }
      convert => { "status" => "integer" }
      convert => { "volume" => "integer" }
      convert => { "price" => "integer" }
      convert => { "tradeVolume" => "integer" }
    }
  }
}

output {
  elasticsearch {
    hosts => ["localhost"]
    index => "sink-%{[@metadata][kafka][lc_topic]}"
  }
}